/*
 * Mistral AI API
 * Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.arhs.ai.poc.mistral.client.model;

import com.fasterxml.jackson.annotation.*;
import org.openapitools.jackson.nullable.JsonNullable;

import java.util.*;

/**
 * BatchJobOut
 */
@JsonPropertyOrder({
  BatchJobOut.JSON_PROPERTY_ID,
  BatchJobOut.JSON_PROPERTY_OBJECT,
  BatchJobOut.JSON_PROPERTY_INPUT_FILES,
  BatchJobOut.JSON_PROPERTY_METADATA,
  BatchJobOut.JSON_PROPERTY_ENDPOINT,
  BatchJobOut.JSON_PROPERTY_MODEL,
  BatchJobOut.JSON_PROPERTY_OUTPUT_FILE,
  BatchJobOut.JSON_PROPERTY_ERROR_FILE,
  BatchJobOut.JSON_PROPERTY_ERRORS,
  BatchJobOut.JSON_PROPERTY_STATUS,
  BatchJobOut.JSON_PROPERTY_CREATED_AT,
  BatchJobOut.JSON_PROPERTY_TOTAL_REQUESTS,
  BatchJobOut.JSON_PROPERTY_COMPLETED_REQUESTS,
  BatchJobOut.JSON_PROPERTY_SUCCEEDED_REQUESTS,
  BatchJobOut.JSON_PROPERTY_FAILED_REQUESTS,
  BatchJobOut.JSON_PROPERTY_STARTED_AT,
  BatchJobOut.JSON_PROPERTY_COMPLETED_AT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-05T14:53:13.544788800+01:00[Europe/Berlin]", comments = "Generator version: 7.10.0")
public class BatchJobOut {
  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nonnull
  private String id;

  /**
   * Gets or Sets _object
   */
  public enum ObjectEnum {
    BATCH(String.valueOf("batch"));

    private String value;

    ObjectEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ObjectEnum fromValue(String value) {
      for (ObjectEnum b : ObjectEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_OBJECT = "object";
  @jakarta.annotation.Nullable
  private ObjectEnum _object = ObjectEnum.BATCH;

  public static final String JSON_PROPERTY_INPUT_FILES = "input_files";
  @jakarta.annotation.Nonnull
  private List<UUID> inputFiles = new ArrayList<>();

  public static final String JSON_PROPERTY_METADATA = "metadata";
  @jakarta.annotation.Nullable
  private JsonNullable<Map<String, Object>> metadata = JsonNullable.<Map<String, Object>>undefined();

  public static final String JSON_PROPERTY_ENDPOINT = "endpoint";
  @jakarta.annotation.Nonnull
  private String endpoint;

  public static final String JSON_PROPERTY_MODEL = "model";
  @jakarta.annotation.Nonnull
  private String model;

  public static final String JSON_PROPERTY_OUTPUT_FILE = "output_file";
  @jakarta.annotation.Nullable
  private JsonNullable<UUID> outputFile = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_ERROR_FILE = "error_file";
  @jakarta.annotation.Nullable
  private JsonNullable<UUID> errorFile = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_ERRORS = "errors";
  @jakarta.annotation.Nonnull
  private List<BatchError> errors = new ArrayList<>();

  public static final String JSON_PROPERTY_STATUS = "status";
  @jakarta.annotation.Nonnull
  private BatchJobStatus status;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  @jakarta.annotation.Nonnull
  private Integer createdAt;

  public static final String JSON_PROPERTY_TOTAL_REQUESTS = "total_requests";
  @jakarta.annotation.Nonnull
  private Integer totalRequests;

  public static final String JSON_PROPERTY_COMPLETED_REQUESTS = "completed_requests";
  @jakarta.annotation.Nonnull
  private Integer completedRequests;

  public static final String JSON_PROPERTY_SUCCEEDED_REQUESTS = "succeeded_requests";
  @jakarta.annotation.Nonnull
  private Integer succeededRequests;

  public static final String JSON_PROPERTY_FAILED_REQUESTS = "failed_requests";
  @jakarta.annotation.Nonnull
  private Integer failedRequests;

  public static final String JSON_PROPERTY_STARTED_AT = "started_at";
  @jakarta.annotation.Nullable
  private JsonNullable<Integer> startedAt = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_COMPLETED_AT = "completed_at";
  @jakarta.annotation.Nullable
  private JsonNullable<Integer> completedAt = JsonNullable.<Integer>undefined();

  public BatchJobOut() {
  }

  public BatchJobOut id(@jakarta.annotation.Nonnull String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@jakarta.annotation.Nonnull String id) {
    this.id = id;
  }

  public BatchJobOut _object(@jakarta.annotation.Nullable ObjectEnum _object) {
    
    this._object = _object;
    return this;
  }

  /**
   * Get _object
   * @return _object
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ObjectEnum getObject() {
    return _object;
  }


  @JsonProperty(JSON_PROPERTY_OBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setObject(@jakarta.annotation.Nullable ObjectEnum _object) {
    this._object = _object;
  }

  public BatchJobOut inputFiles(@jakarta.annotation.Nonnull List<UUID> inputFiles) {
    
    this.inputFiles = inputFiles;
    return this;
  }

  public BatchJobOut addInputFilesItem(UUID inputFilesItem) {
    if (this.inputFiles == null) {
      this.inputFiles = new ArrayList<>();
    }
    this.inputFiles.add(inputFilesItem);
    return this;
  }

  /**
   * Get inputFiles
   * @return inputFiles
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INPUT_FILES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<UUID> getInputFiles() {
    return inputFiles;
  }


  @JsonProperty(JSON_PROPERTY_INPUT_FILES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInputFiles(@jakarta.annotation.Nonnull List<UUID> inputFiles) {
    this.inputFiles = inputFiles;
  }

  public BatchJobOut metadata(@jakarta.annotation.Nullable Map<String, Object> metadata) {
    this.metadata = JsonNullable.<Map<String, Object>>of(metadata);
    
    return this;
  }

  public BatchJobOut putMetadataItem(String key, Object metadataItem) {
    if (this.metadata == null || !this.metadata.isPresent()) {
      this.metadata = JsonNullable.<Map<String, Object>>of(new HashMap<>());
    }
    try {
      this.metadata.get().put(key, metadataItem);
    } catch (NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Map<String, Object> getMetadata() {
        return metadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, Object>> getMetadata_JsonNullable() {
    return metadata;
  }
  
  @JsonProperty(JSON_PROPERTY_METADATA)
  public void setMetadata_JsonNullable(JsonNullable<Map<String, Object>> metadata) {
    this.metadata = metadata;
  }

  public void setMetadata(@jakarta.annotation.Nullable Map<String, Object> metadata) {
    this.metadata = JsonNullable.<Map<String, Object>>of(metadata);
  }

  public BatchJobOut endpoint(@jakarta.annotation.Nonnull String endpoint) {
    
    this.endpoint = endpoint;
    return this;
  }

  /**
   * Get endpoint
   * @return endpoint
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENDPOINT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEndpoint() {
    return endpoint;
  }


  @JsonProperty(JSON_PROPERTY_ENDPOINT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEndpoint(@jakarta.annotation.Nonnull String endpoint) {
    this.endpoint = endpoint;
  }

  public BatchJobOut model(@jakarta.annotation.Nonnull String model) {
    
    this.model = model;
    return this;
  }

  /**
   * Get model
   * @return model
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getModel() {
    return model;
  }


  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setModel(@jakarta.annotation.Nonnull String model) {
    this.model = model;
  }

  public BatchJobOut outputFile(@jakarta.annotation.Nullable UUID outputFile) {
    this.outputFile = JsonNullable.<UUID>of(outputFile);
    
    return this;
  }

  /**
   * Get outputFile
   * @return outputFile
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getOutputFile() {
        return outputFile.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OUTPUT_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getOutputFile_JsonNullable() {
    return outputFile;
  }
  
  @JsonProperty(JSON_PROPERTY_OUTPUT_FILE)
  public void setOutputFile_JsonNullable(JsonNullable<UUID> outputFile) {
    this.outputFile = outputFile;
  }

  public void setOutputFile(@jakarta.annotation.Nullable UUID outputFile) {
    this.outputFile = JsonNullable.<UUID>of(outputFile);
  }

  public BatchJobOut errorFile(@jakarta.annotation.Nullable UUID errorFile) {
    this.errorFile = JsonNullable.<UUID>of(errorFile);
    
    return this;
  }

  /**
   * Get errorFile
   * @return errorFile
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getErrorFile() {
        return errorFile.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERROR_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getErrorFile_JsonNullable() {
    return errorFile;
  }
  
  @JsonProperty(JSON_PROPERTY_ERROR_FILE)
  public void setErrorFile_JsonNullable(JsonNullable<UUID> errorFile) {
    this.errorFile = errorFile;
  }

  public void setErrorFile(@jakarta.annotation.Nullable UUID errorFile) {
    this.errorFile = JsonNullable.<UUID>of(errorFile);
  }

  public BatchJobOut errors(@jakarta.annotation.Nonnull List<BatchError> errors) {
    
    this.errors = errors;
    return this;
  }

  public BatchJobOut addErrorsItem(BatchError errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

  /**
   * Get errors
   * @return errors
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<BatchError> getErrors() {
    return errors;
  }


  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setErrors(@jakarta.annotation.Nonnull List<BatchError> errors) {
    this.errors = errors;
  }

  public BatchJobOut status(@jakarta.annotation.Nonnull BatchJobStatus status) {
    
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BatchJobStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(@jakarta.annotation.Nonnull BatchJobStatus status) {
    this.status = status;
  }

  public BatchJobOut createdAt(@jakarta.annotation.Nonnull Integer createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@jakarta.annotation.Nonnull Integer createdAt) {
    this.createdAt = createdAt;
  }

  public BatchJobOut totalRequests(@jakarta.annotation.Nonnull Integer totalRequests) {
    
    this.totalRequests = totalRequests;
    return this;
  }

  /**
   * Get totalRequests
   * @return totalRequests
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getTotalRequests() {
    return totalRequests;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalRequests(@jakarta.annotation.Nonnull Integer totalRequests) {
    this.totalRequests = totalRequests;
  }

  public BatchJobOut completedRequests(@jakarta.annotation.Nonnull Integer completedRequests) {
    
    this.completedRequests = completedRequests;
    return this;
  }

  /**
   * Get completedRequests
   * @return completedRequests
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COMPLETED_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCompletedRequests() {
    return completedRequests;
  }


  @JsonProperty(JSON_PROPERTY_COMPLETED_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCompletedRequests(@jakarta.annotation.Nonnull Integer completedRequests) {
    this.completedRequests = completedRequests;
  }

  public BatchJobOut succeededRequests(@jakarta.annotation.Nonnull Integer succeededRequests) {
    
    this.succeededRequests = succeededRequests;
    return this;
  }

  /**
   * Get succeededRequests
   * @return succeededRequests
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUCCEEDED_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getSucceededRequests() {
    return succeededRequests;
  }


  @JsonProperty(JSON_PROPERTY_SUCCEEDED_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSucceededRequests(@jakarta.annotation.Nonnull Integer succeededRequests) {
    this.succeededRequests = succeededRequests;
  }

  public BatchJobOut failedRequests(@jakarta.annotation.Nonnull Integer failedRequests) {
    
    this.failedRequests = failedRequests;
    return this;
  }

  /**
   * Get failedRequests
   * @return failedRequests
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FAILED_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getFailedRequests() {
    return failedRequests;
  }


  @JsonProperty(JSON_PROPERTY_FAILED_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFailedRequests(@jakarta.annotation.Nonnull Integer failedRequests) {
    this.failedRequests = failedRequests;
  }

  public BatchJobOut startedAt(@jakarta.annotation.Nullable Integer startedAt) {
    this.startedAt = JsonNullable.<Integer>of(startedAt);
    
    return this;
  }

  /**
   * Get startedAt
   * @return startedAt
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Integer getStartedAt() {
        return startedAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getStartedAt_JsonNullable() {
    return startedAt;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTED_AT)
  public void setStartedAt_JsonNullable(JsonNullable<Integer> startedAt) {
    this.startedAt = startedAt;
  }

  public void setStartedAt(@jakarta.annotation.Nullable Integer startedAt) {
    this.startedAt = JsonNullable.<Integer>of(startedAt);
  }

  public BatchJobOut completedAt(@jakarta.annotation.Nullable Integer completedAt) {
    this.completedAt = JsonNullable.<Integer>of(completedAt);
    
    return this;
  }

  /**
   * Get completedAt
   * @return completedAt
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Integer getCompletedAt() {
        return completedAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMPLETED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getCompletedAt_JsonNullable() {
    return completedAt;
  }
  
  @JsonProperty(JSON_PROPERTY_COMPLETED_AT)
  public void setCompletedAt_JsonNullable(JsonNullable<Integer> completedAt) {
    this.completedAt = completedAt;
  }

  public void setCompletedAt(@jakarta.annotation.Nullable Integer completedAt) {
    this.completedAt = JsonNullable.<Integer>of(completedAt);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchJobOut batchJobOut = (BatchJobOut) o;
    return Objects.equals(this.id, batchJobOut.id) &&
        Objects.equals(this._object, batchJobOut._object) &&
        Objects.equals(this.inputFiles, batchJobOut.inputFiles) &&
        equalsNullable(this.metadata, batchJobOut.metadata) &&
        Objects.equals(this.endpoint, batchJobOut.endpoint) &&
        Objects.equals(this.model, batchJobOut.model) &&
        equalsNullable(this.outputFile, batchJobOut.outputFile) &&
        equalsNullable(this.errorFile, batchJobOut.errorFile) &&
        Objects.equals(this.errors, batchJobOut.errors) &&
        Objects.equals(this.status, batchJobOut.status) &&
        Objects.equals(this.createdAt, batchJobOut.createdAt) &&
        Objects.equals(this.totalRequests, batchJobOut.totalRequests) &&
        Objects.equals(this.completedRequests, batchJobOut.completedRequests) &&
        Objects.equals(this.succeededRequests, batchJobOut.succeededRequests) &&
        Objects.equals(this.failedRequests, batchJobOut.failedRequests) &&
        equalsNullable(this.startedAt, batchJobOut.startedAt) &&
        equalsNullable(this.completedAt, batchJobOut.completedAt);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, _object, inputFiles, hashCodeNullable(metadata), endpoint, model, hashCodeNullable(outputFile), hashCodeNullable(errorFile), errors, status, createdAt, totalRequests, completedRequests, succeededRequests, failedRequests, hashCodeNullable(startedAt), hashCodeNullable(completedAt));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchJobOut {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    inputFiles: ").append(toIndentedString(inputFiles)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    outputFile: ").append(toIndentedString(outputFile)).append("\n");
    sb.append("    errorFile: ").append(toIndentedString(errorFile)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    totalRequests: ").append(toIndentedString(totalRequests)).append("\n");
    sb.append("    completedRequests: ").append(toIndentedString(completedRequests)).append("\n");
    sb.append("    succeededRequests: ").append(toIndentedString(succeededRequests)).append("\n");
    sb.append("    failedRequests: ").append(toIndentedString(failedRequests)).append("\n");
    sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
    sb.append("    completedAt: ").append(toIndentedString(completedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

