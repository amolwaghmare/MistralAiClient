/*
 * Mistral AI API
 * Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.arhs.ai.poc.mistral.client.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.jackson.nullable.JsonNullable;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.Objects;

/**
 * The fine-tuning hyperparameter settings used in a fine-tune job.
 */
@JsonPropertyOrder({
  TrainingParametersIn.JSON_PROPERTY_TRAINING_STEPS,
  TrainingParametersIn.JSON_PROPERTY_LEARNING_RATE,
  TrainingParametersIn.JSON_PROPERTY_WEIGHT_DECAY,
  TrainingParametersIn.JSON_PROPERTY_WARMUP_FRACTION,
  TrainingParametersIn.JSON_PROPERTY_EPOCHS,
  TrainingParametersIn.JSON_PROPERTY_FIM_RATIO,
  TrainingParametersIn.JSON_PROPERTY_SEQ_LEN
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-05T14:53:13.544788800+01:00[Europe/Berlin]", comments = "Generator version: 7.10.0")
public class TrainingParametersIn {
  public static final String JSON_PROPERTY_TRAINING_STEPS = "training_steps";
  @jakarta.annotation.Nullable
  private JsonNullable<Integer> trainingSteps = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_LEARNING_RATE = "learning_rate";
  @jakarta.annotation.Nullable
  private BigDecimal learningRate = new BigDecimal("0.00010");

  public static final String JSON_PROPERTY_WEIGHT_DECAY = "weight_decay";
  @jakarta.annotation.Nullable
  private JsonNullable<BigDecimal> weightDecay = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_WARMUP_FRACTION = "warmup_fraction";
  @jakarta.annotation.Nullable
  private JsonNullable<BigDecimal> warmupFraction = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_EPOCHS = "epochs";
  @jakarta.annotation.Nullable
  private JsonNullable<BigDecimal> epochs = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_FIM_RATIO = "fim_ratio";
  @jakarta.annotation.Nullable
  private JsonNullable<BigDecimal> fimRatio = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_SEQ_LEN = "seq_len";
  @jakarta.annotation.Nullable
  private JsonNullable<Integer> seqLen = JsonNullable.<Integer>undefined();

  public TrainingParametersIn() {
  }

  public TrainingParametersIn trainingSteps(@jakarta.annotation.Nullable Integer trainingSteps) {
    this.trainingSteps = JsonNullable.<Integer>of(trainingSteps);
    
    return this;
  }

  /**
   * Get trainingSteps
   * minimum: 1
   * @return trainingSteps
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Integer getTrainingSteps() {
        return trainingSteps.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRAINING_STEPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getTrainingSteps_JsonNullable() {
    return trainingSteps;
  }
  
  @JsonProperty(JSON_PROPERTY_TRAINING_STEPS)
  public void setTrainingSteps_JsonNullable(JsonNullable<Integer> trainingSteps) {
    this.trainingSteps = trainingSteps;
  }

  public void setTrainingSteps(@jakarta.annotation.Nullable Integer trainingSteps) {
    this.trainingSteps = JsonNullable.<Integer>of(trainingSteps);
  }

  public TrainingParametersIn learningRate(@jakarta.annotation.Nullable BigDecimal learningRate) {
    
    this.learningRate = learningRate;
    return this;
  }

  /**
   * A parameter describing how much to adjust the pre-trained model&#39;s weights in response to the estimated error each time the weights are updated during the fine-tuning process.
   * minimum: 1.0E-8
   * maximum: 1
   * @return learningRate
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEARNING_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLearningRate() {
    return learningRate;
  }


  @JsonProperty(JSON_PROPERTY_LEARNING_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLearningRate(@jakarta.annotation.Nullable BigDecimal learningRate) {
    this.learningRate = learningRate;
  }

  public TrainingParametersIn weightDecay(@jakarta.annotation.Nullable BigDecimal weightDecay) {
    this.weightDecay = JsonNullable.<BigDecimal>of(weightDecay);
    
    return this;
  }

  /**
   * Get weightDecay
   * minimum: 0
   * maximum: 1
   * @return weightDecay
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public BigDecimal getWeightDecay() {
        return weightDecay.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WEIGHT_DECAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getWeightDecay_JsonNullable() {
    return weightDecay;
  }
  
  @JsonProperty(JSON_PROPERTY_WEIGHT_DECAY)
  public void setWeightDecay_JsonNullable(JsonNullable<BigDecimal> weightDecay) {
    this.weightDecay = weightDecay;
  }

  public void setWeightDecay(@jakarta.annotation.Nullable BigDecimal weightDecay) {
    this.weightDecay = JsonNullable.<BigDecimal>of(weightDecay);
  }

  public TrainingParametersIn warmupFraction(@jakarta.annotation.Nullable BigDecimal warmupFraction) {
    this.warmupFraction = JsonNullable.<BigDecimal>of(warmupFraction);
    
    return this;
  }

  /**
   * Get warmupFraction
   * minimum: 0
   * maximum: 1
   * @return warmupFraction
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public BigDecimal getWarmupFraction() {
        return warmupFraction.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WARMUP_FRACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getWarmupFraction_JsonNullable() {
    return warmupFraction;
  }
  
  @JsonProperty(JSON_PROPERTY_WARMUP_FRACTION)
  public void setWarmupFraction_JsonNullable(JsonNullable<BigDecimal> warmupFraction) {
    this.warmupFraction = warmupFraction;
  }

  public void setWarmupFraction(@jakarta.annotation.Nullable BigDecimal warmupFraction) {
    this.warmupFraction = JsonNullable.<BigDecimal>of(warmupFraction);
  }

  public TrainingParametersIn epochs(@jakarta.annotation.Nullable BigDecimal epochs) {
    this.epochs = JsonNullable.<BigDecimal>of(epochs);
    
    return this;
  }

  /**
   * Get epochs
   * @return epochs
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public BigDecimal getEpochs() {
        return epochs.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EPOCHS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getEpochs_JsonNullable() {
    return epochs;
  }
  
  @JsonProperty(JSON_PROPERTY_EPOCHS)
  public void setEpochs_JsonNullable(JsonNullable<BigDecimal> epochs) {
    this.epochs = epochs;
  }

  public void setEpochs(@jakarta.annotation.Nullable BigDecimal epochs) {
    this.epochs = JsonNullable.<BigDecimal>of(epochs);
  }

  public TrainingParametersIn fimRatio(@jakarta.annotation.Nullable BigDecimal fimRatio) {
    this.fimRatio = JsonNullable.<BigDecimal>of(fimRatio);
    
    return this;
  }

  /**
   * Get fimRatio
   * minimum: 0
   * maximum: 1
   * @return fimRatio
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public BigDecimal getFimRatio() {
        return fimRatio.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIM_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getFimRatio_JsonNullable() {
    return fimRatio;
  }
  
  @JsonProperty(JSON_PROPERTY_FIM_RATIO)
  public void setFimRatio_JsonNullable(JsonNullable<BigDecimal> fimRatio) {
    this.fimRatio = fimRatio;
  }

  public void setFimRatio(@jakarta.annotation.Nullable BigDecimal fimRatio) {
    this.fimRatio = JsonNullable.<BigDecimal>of(fimRatio);
  }

  public TrainingParametersIn seqLen(@jakarta.annotation.Nullable Integer seqLen) {
    this.seqLen = JsonNullable.<Integer>of(seqLen);
    
    return this;
  }

  /**
   * Get seqLen
   * minimum: 100
   * @return seqLen
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Integer getSeqLen() {
        return seqLen.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SEQ_LEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getSeqLen_JsonNullable() {
    return seqLen;
  }
  
  @JsonProperty(JSON_PROPERTY_SEQ_LEN)
  public void setSeqLen_JsonNullable(JsonNullable<Integer> seqLen) {
    this.seqLen = seqLen;
  }

  public void setSeqLen(@jakarta.annotation.Nullable Integer seqLen) {
    this.seqLen = JsonNullable.<Integer>of(seqLen);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrainingParametersIn trainingParametersIn = (TrainingParametersIn) o;
    return equalsNullable(this.trainingSteps, trainingParametersIn.trainingSteps) &&
        Objects.equals(this.learningRate, trainingParametersIn.learningRate) &&
        equalsNullable(this.weightDecay, trainingParametersIn.weightDecay) &&
        equalsNullable(this.warmupFraction, trainingParametersIn.warmupFraction) &&
        equalsNullable(this.epochs, trainingParametersIn.epochs) &&
        equalsNullable(this.fimRatio, trainingParametersIn.fimRatio) &&
        equalsNullable(this.seqLen, trainingParametersIn.seqLen);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(trainingSteps), learningRate, hashCodeNullable(weightDecay), hashCodeNullable(warmupFraction), hashCodeNullable(epochs), hashCodeNullable(fimRatio), hashCodeNullable(seqLen));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrainingParametersIn {\n");
    sb.append("    trainingSteps: ").append(toIndentedString(trainingSteps)).append("\n");
    sb.append("    learningRate: ").append(toIndentedString(learningRate)).append("\n");
    sb.append("    weightDecay: ").append(toIndentedString(weightDecay)).append("\n");
    sb.append("    warmupFraction: ").append(toIndentedString(warmupFraction)).append("\n");
    sb.append("    epochs: ").append(toIndentedString(epochs)).append("\n");
    sb.append("    fimRatio: ").append(toIndentedString(fimRatio)).append("\n");
    sb.append("    seqLen: ").append(toIndentedString(seqLen)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

