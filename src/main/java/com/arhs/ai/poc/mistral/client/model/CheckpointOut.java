/*
 * Mistral AI API
 * Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.arhs.ai.poc.mistral.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.Objects;

/**
 * CheckpointOut
 */
@JsonPropertyOrder({
  CheckpointOut.JSON_PROPERTY_METRICS,
  CheckpointOut.JSON_PROPERTY_STEP_NUMBER,
  CheckpointOut.JSON_PROPERTY_CREATED_AT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-05T14:53:13.544788800+01:00[Europe/Berlin]", comments = "Generator version: 7.10.0")
public class CheckpointOut {
  public static final String JSON_PROPERTY_METRICS = "metrics";
  @jakarta.annotation.Nonnull
  private MetricOut metrics;

  public static final String JSON_PROPERTY_STEP_NUMBER = "step_number";
  @jakarta.annotation.Nonnull
  private Integer stepNumber;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  @jakarta.annotation.Nonnull
  private Integer createdAt;

  public CheckpointOut() {
  }

  public CheckpointOut metrics(@jakarta.annotation.Nonnull MetricOut metrics) {
    
    this.metrics = metrics;
    return this;
  }

  /**
   * Get metrics
   * @return metrics
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_METRICS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public MetricOut getMetrics() {
    return metrics;
  }


  @JsonProperty(JSON_PROPERTY_METRICS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetrics(@jakarta.annotation.Nonnull MetricOut metrics) {
    this.metrics = metrics;
  }

  public CheckpointOut stepNumber(@jakarta.annotation.Nonnull Integer stepNumber) {
    
    this.stepNumber = stepNumber;
    return this;
  }

  /**
   * The step number that the checkpoint was created at.
   * @return stepNumber
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STEP_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getStepNumber() {
    return stepNumber;
  }


  @JsonProperty(JSON_PROPERTY_STEP_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStepNumber(@jakarta.annotation.Nonnull Integer stepNumber) {
    this.stepNumber = stepNumber;
  }

  public CheckpointOut createdAt(@jakarta.annotation.Nonnull Integer createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

  /**
   * The UNIX timestamp (in seconds) for when the checkpoint was created.
   * @return createdAt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@jakarta.annotation.Nonnull Integer createdAt) {
    this.createdAt = createdAt;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CheckpointOut checkpointOut = (CheckpointOut) o;
    return Objects.equals(this.metrics, checkpointOut.metrics) &&
        Objects.equals(this.stepNumber, checkpointOut.stepNumber) &&
        Objects.equals(this.createdAt, checkpointOut.createdAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metrics, stepNumber, createdAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CheckpointOut {\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    stepNumber: ").append(toIndentedString(stepNumber)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

